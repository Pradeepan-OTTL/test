name: Backend Deployment

on:
  push:
    branches: [ master ]
  workflow_dispatch:
  workflow_call:

permissions:
  contents: write

jobs:
  DevDeployment:
    name: Dev Deployment
    if: github.ref == 'refs/heads/master'
    runs-on: test
    environment:
      name: Development
    steps:
      - name: Deploy
        run: |
            cat /home/ubuntu/actions-runner/_work/_temp/_github_workflow/event.json
            PR_INFO=$(curl -s -H "Authorization: token ${{ secrets.TOKEN_GITHUB }}" "https://api.github.com/repos/${{ github.repository }}/pulls?state=closed&sort=updated&direction=desc" | jq '.[0] | {number: .number, source_branch: .head.ref}')
            PR_NUMBER=$(echo "$PR_INFO" | jq '.number')
            SOURCE_BRANCH=$(echo "$PR_INFO" | jq -r '.source_branch')
            echo "Last PR Number: $PR_NUMBER"
            echo "SOURCE_BRANCH: $SOURCE_BRANCH"
            printenv
            echo DevDeployment! 


  StagingDeployment:
    name: Staging Deployment
    if: github.ref == 'refs/heads/master'
    needs: [DevDeployment]
    runs-on: test
    environment:
      name: Staging
    steps:
      - name: Deploy
        run: echo StagingDeployment!

  ProdDeployment:
    name: Production Deployment
    if: github.ref == 'refs/heads/master'
    needs: [StagingDeployment]
    runs-on: test
    environment:
      name: Production
    steps:
      - name: Deploy
        run: echo ProdDeployment!

  CreateReleaseTag:
    name: Create Release Tag
    if: github.ref == 'refs/heads/master'
    needs: [ProdDeployment]
    runs-on: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Release Tag (e.g., v1.0.0)
        id: vars
        run: |
          TAG_NAME="v$(date +'%Y.%m.%d.%H%M%S')"
          echo "tag_name=$TAG_NAME" >> "$GITHUB_OUTPUT"

      - name: Create Git Tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.vars.outputs.tag_name }}
          git push origin ${{ steps.vars.outputs.tag_name }}